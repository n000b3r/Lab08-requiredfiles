# .github/workflows/eslint.yml
name: ESLint Code Analysis

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  security-events: write
  contents:       read

jobs:
  eslint:
    name: Lint & Generate SARIF
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Cache npm modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node

      - name: Install project dependencies
        run: npm ci

      - name: Install ESLint, security plugins & SARIF formatter
        run: |
          npm install --save-dev \
            eslint \
            eslint-plugin-security \
            eslint-plugin-no-unsanitized \
            @microsoft/eslint-formatter-sarif

      - name: Create report directory
        run: mkdir -p reports

      - name: Run ESLint â†’ SARIF
        run: |
          npx eslint "simple-node-js-react-npm-app-master/**/*.{js,jsx}" \
            --ext .js,.jsx \
            --format @microsoft/eslint-formatter-sarif \
            --output-file reports/eslint-results.sarif || true

      - name: Debug SARIF output
        run: |
          echo "=== SARIF report ==="
          cat reports/eslint-results.sarif || echo "No SARIF report generated"

      - name: Upload SARIF to Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: reports/eslint-results.sarif

      - name: Upload SARIF as Workflow Artifact
        uses: actions/upload-artifact@v4
        with:
          name: eslint-sarif
          path: reports/eslint-results.sarif
